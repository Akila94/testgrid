pipeline
{
    agent any

    environment
    {
      FILE_SEC = "key.json"
      WORKSPACE = "docker_build"
      INSTALLMENT="installment"
    }

    stages {
        stage('prepare-workspace')
        {
          steps
          {
          echo "Build started."
            withCredentials([file(credentialsId: 'GKE_BOT_GCE_SERVICE_ACC', variable: 'keyLocation')])
            {
              sh """
                if [ ! -d ${WORKSPACE} ]; then
                  mkdir ${WORKSPACE}
                else
                  echo "Directory exists"
                   rm -r ${WORKSPACE}/*
                fi

                if [ ! -d ${INSTALLMENT} ]; then
                  mkdir ${INSTALLMENT}
                fi

                cp ${keyLocation} ${INSTALLMENT}/${FILE_SEC}
                chmod 400 ${INSTALLMENT}/${FILE_SEC}
              """
            }
          }
        }

        stage ('clone-repo')
        {
          steps
          {
            sh """
              cd ${WORKSPACE}
              ls
              git clone https://github.com/NishikaDeSilva/testgrid
            """
          }
        }

        stage('run-script')
        {
          steps
          {
            withCredentials([string(credentialsId: 'GCP_GCR_IMGPULL_USERNAME', variable: 'WUM_USERNAME'),
                             string(credentialsId: 'GCP_GCR_IMGPULL_PASSWORD', variable: 'WUM_PASSWORD'),
                             string(credentialsId: 'ORACLE_ACC_USER', variable: 'ORACLE_USER'),
                             string(credentialsId: 'ORACLE_ACC_PWD', variable: 'ORACLE_PASS'),
                             string(credentialsId: 'GITHUB_ACCESS_TOKEN', variable: 'ACCESS_TOKEN')
            ])
            {
              sh """
                chmod +x resources/k8s/build_latest.sh
                chmod +x resources/k8s/docker_build.sh
                sh resources/k8s/build_latest.sh
              """
            }
          }
        }
    }
}
